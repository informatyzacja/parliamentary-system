services:
  frontend:
    restart: always
    build:
      context: ./frontend
      args: &buildargs
        - NODE_VERSION=16
    ports:
      - 3080:3000
    networks:
      - app
    labels:
      - "logging=promtail"
      - "logging_jobname=containerlogs"
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`parlament.samorzad.pwr.edu.pl`)"
      - "traefik.http.routers.frontend.entrypoints=web-secure,web"
      - "traefik.docker.network=app"

  backend:
    restart: always
    build:
      context: ./backend
      args: *buildargs
    ports:
      - 81:1337
    volumes:
      - ./backend/public/:/app/public/
    depends_on:
      - postgres
    networks:
      - app
    labels:
      - "logging=promtail"
      - "logging_jobname=containerlogs"
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.parlament.samorzad.pwr.edu.pl`)"
      - "traefik.http.routers.backend.entrypoints=web-secure,web"
      - "traefik.docker.network=app"

  postgres:
    restart: always
    labels:
      - "logging=promtail"
      - "logging_jobname=containerlogs"
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=informatyzacja
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=parliamentarystrapi
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app

  traefik:
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`parlament.samorzad.pwr.edu.pl`) && Path(`/traefik`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=web-secure,web"
      - "logging=promtail"
      - "logging_jobname=containerlogs"
      - "traefik.http.middlewares.auth.basicauth.users=informatyzacja:$$apr1$$1LpSB/Hk$$JMUeuDx2q7Bm8wfNzrNzK0"
      - "traefik.http.middlewares.auth.basicauth.removeheader=true"
      - "traefik.http.routers.api.middlewares=auth"

    image: traefik:v2.9
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--serverstransport.insecureskipverify=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app
      - monitoring

  loki:
    restart: always
    image: grafana/loki:main
    command: "-config.file=/etc/loki/config.yaml"
    ports:
      - "3100:3100"
    volumes:
      - ./.config/loki-config.yaml:/etc/loki/config.yaml:ro
      - ./data/loki:/loki/rules
    networks:
      - monitoring

  promtail:
    image: grafana/promtail
    ports:
      - "9080:9080"
    volumes:
      - ./.config/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: "-config.file=/etc/promtail/config.yaml"
    depends_on:
      - loki
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
            secureJsonData:
              httpHeaderValue1: "tenant1"
        EOF
        /run.sh
    ports:
      - "3000:3000"
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`parlament.samorzad.pwr.edu.pl`) && Path(`/logs`)"
      - "traefik.http.routers.grafana.entrypoints=web-secure,web"
      - "traefik.http.routers.grafana.middlewares=auth"
      - "traefik.docker.network=monitoring"

networks:
  app:
  monitoring:
