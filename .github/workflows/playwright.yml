name: E2E tests

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install --frozen-lockfile
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build frontend
        run: |
          cd frontend
          touch .env.local
          echo NEXTAUTH_URL=http://localhost:3000 >> .env.local
          echo NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }} >> .env.local
          echo NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} >> .env.local
          echo USOS_CLIENT_ID=${{ secrets.USOS_CLIENT_ID }} >> .env.local
          echo USOS_CLIENT_SECRET=${{ secrets.USOS_CLIENT_SECRET }} >> .env.local
          echo USOS_BASE_URL=${{ secrets.USOS_BASE_URL }} >> .env.local
          echo NODE_ENV=production >> .env.local
          cd ..
          npm run build --dir frontend
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        env:
          TEST_USOS_LOGIN: ${{ secrets.TEST_USOS_LOGIN }}
          TEST_USOS_PASSWORD: ${{ secrets.TEST_USOS_PASSWORD }}
        run: npm run test:e2e --dir frontend
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
