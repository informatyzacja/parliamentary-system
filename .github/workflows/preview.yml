name: Preview

on:
  issue_comment:
    types: [created]

jobs:
  check-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}
      # The first thing we do is check if the comment was indeed a trigger.
      - name: Check if the comment was a command, and react with üëÄ if it was
        if: github.event.issue.pull_request
        uses: famly/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/preview'
          reaction: eyes
        env:
          GITHUB_TOKEN: '${{ steps.generate_token.outputs.token }}'
      # When triggered by a comment, we do not have access to the usual github.sha
      # value, so we get it manually.
      - name: Extract current commit
        if: steps.check.outputs.triggered == 'true'
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo, number: pull_number } = context.issue;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number,
            });
            return pr.data.head.sha
      - uses: actions/checkout@v3
        if: steps.check.outputs.triggered == 'true'
        with:
          ref: ${{ steps.sha.outputs.result }}
      - uses: actions/setup-node@v3
        if: steps.check.outputs.triggered == 'true'
        with:
          node-version: 18
      - name: Start web tunnel
        id: expose-tunnel
        if: steps.check.outputs.triggered == 'true'
        uses: codetalkio/expose-tunnel@v1
        with:
          service: localhost.run
          port: 3000
      - name: Fix tunnel url
        id: tunnel-url
        run: |
          url=${{ steps.expose-tunnel.outputs.tunnel-url }}
          fixedUrl=${url::-6}
          echo "tunnel-url=${fixedUrl}" >> $GITHUB_OUTPUT
      - name: Install dependencies
        if: steps.check.outputs.triggered == 'true'
        uses: bahmutov/npm-install@v1
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/apps/web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build web
        if: steps.check.outputs.triggered == 'true'
        run: |
          cd apps/web
          touch .env.local
          echo NEXTAUTH_URL=${{ steps.tunnel-url.outputs.tunnel-url }} >> .env.local
          echo NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} >> .env.local
          echo NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} >> .env.local
          echo USOS_CLIENT_ID=${{ secrets.USOS_CLIENT_ID }} >> .env.local
          echo USOS_CLIENT_SECRET=${{ secrets.USOS_CLIENT_SECRET }} >> .env.local
          echo USOS_BASE_URL=${{ secrets.USOS_BASE_URL }} >> .env.local
          echo NODE_ENV=production >> .env.local
          cd ../..
          npm run build:web

      - name: Starting app
        if: steps.check.outputs.triggered == 'true'
        run: npm run start:web &

      # Post a comment on the Pull Request with the URL to the tunnel.
      - name: Post preview environment as comment on PR
        uses: actions/github-script@v6
        if: steps.tunnel-url.outputs.tunnel-url != ''
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            github.rest.issues.createComment({
                issue_number: "${{ github.event.issue.number || github.event.pull_request.number }}",
                owner: "${{ github.repository_owner }}",
                repo: "${{ github.event.repository.name }}",
                body: `**üñºÔ∏è Preview Environment:** ${{ steps.tunnel-url.outputs.tunnel-url }}

              You can stop the preview by clicking "Cancel" on the [GitHub Action](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).`
            })

      # Keep the CI job alive for 30 minutes before we time out.
      - name: Wait for 30 minutes before timing out (unless overwritten)
        if: steps.tunnel-url.outputs.tunnel-url != ''
        run: |
          echo "Tunnel URL is ${{ steps.tunnel-url.outputs.tunnel-url }}"
          timeout 30m sleep 7200
          # Gracefully exit if the timeout hits.
          exit 0
